{
    "openapi": "3.0.2",
    "info": {
        "title": "EVM JSON-RPC API: eth_call",
        "version": "v1.0.0"
    },
    "servers": [
        {
            "url": "https://{network}.s.chainbase.online/v1",
            "variables": {
                "network": {
                    "enum": [
                        "ethereum-mainnet",
                        "ethereum-goerli",
                        "polygon-mainnet",
                        "polygon-mumbai",
                        "bsc-mainnet",
                        "bsc-testnet",
                        "avalanche-mainnet",
                        "avalanche-testnet",
                        "fantom-mainnet",
                        "fantom-testnet",
                        "arbitrum-mainnet",
                        "arbitrum-goerli",
                        "optimism-mainnet",
                        "base-mainnet",
                        "base-goerli",
                        "zksync-mainnet",
                        "zksync-testnet"
                    ],
                    "default": "ethereum-mainnet"
                }
            }
        }
    ],
    "paths": {
        "/{api-key}": {
            "post": {
                "summary": "eth_call",
                "description": "Executes a new message call immediately without creating a transaction on the block chain.\n\n**Parameters**\n\n- `Object` - An object of type Call\n  - `from`:`DATA`, 20 Bytes - (optional) The address the transaction is sent from\n  - `to`:`DATA`, 20 Bytes - The address the transaction is directed to\n  - `gas`: `QUANTITY` - (optional) Integer of the gas provided for the transaction execution. \n  eth_call consumes zero gas, but this parameter may be needed by some executions\n  - `gasPrice`: `QUANTITY` - (optional) Integer of the gasPrice used for each paid gas\n  - `value`: `QUANTITY` - (optional) Integer of the value sent with this transaction\n  - `data`: `DATA` - (optional) Hash of the method signature and encoded parameters. \n  For details see Ethereum Contract ABI\n- `QAUANTITY|TAG` - Integer block number or one of \"earliest\", \"latest\" or \"pending\"\n\n\n**Example**\n\n```json body\n{\n     \"id\": \"1\",\n     \"jsonrpc\": \"2.0\",\n     \"method\": \"eth_call\",\n     \"params\": [\n          {\n               \"to\": \"0x08a2e41fb99a7599725190b9c970ad3893fa33cf\",\n               \"data\": \"0x18160ddd\",\n               \"from\": \"0x08a2e41fb99a7599725190b9c970ad3893fa33cf\",\n               \"gas\": \"0xfffff\",\n               \"gasPrice\": \"0xfffff\",\n               \"value\": \"0x123123\"\n          },\n          \"latest\"\n     ]\n}\n```\n\n**Returns**\n\n- `DATA` - The return value of executed contract",
                "operationId": "evm-eth-call",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Api-Key",
                            "type": "string",
                            "example": "demo"
                        },
                        "name": "api-key",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestExample"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseHex"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RequestExample": {
                "title": "RequestExample",
                "required": [
                    "id",
                    "jsonrpc",
                    "method",
                    "params"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "default": 1,
                        "example": 1
                    },
                    "jsonrpc": {
                        "title": "Jsonrpc",
                        "type": "string",
                        "default": "2.0",
                        "example": "2.0"
                    },
                    "method": {
                        "title": "Method",
                        "type": "string",
                        "default": "eth_call"
                    },
                    "params": {
                        "title": "Params",
                        "type": "array",
                        "items": {},
                        "default": [
                            {
                                "from_": "0x00000000006c3852cbef3e08e8df289169ede581",
                                "to": "0x00000000006c3852cbef3e08e8df289169ede581",
                                "gas": "0xfffff",
                                "gasPrice": "0xfffff",
                                "value": "0x123123",
                                "data": "0x18160ddd"
                            },
                            "latest"
                        ]
                    }
                },
                "example": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "eth_call",
                    "params": [
                        {
                            "from_": "0x00000000006c3852cbef3e08e8df289169ede581",
                            "to": "0x00000000006c3852cbef3e08e8df289169ede581",
                            "gas": "0xfffff",
                            "gasPrice": "0xfffff",
                            "value": "0x123123",
                            "data": "0x18160ddd"
                        },
                        "latest"
                    ]
                }
            },
            "ResponseHex": {
                "title": "ResponseHex",
                "required": [
                    "id",
                    "jsonrpc",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": 1
                    },
                    "jsonrpc": {
                        "title": "Jsonrpc",
                        "type": "string",
                        "example": "2.0"
                    },
                    "result": {
                        "title": "Result",
                        "type": "string"
                    }
                }
            }
        }
    }
}